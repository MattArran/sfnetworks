% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join.R
\name{st_network_join}
\alias{st_network_join}
\title{Join two spatial networks based on equality of node geometries}
\usage{
st_network_join(x, y, ...)
}
\arguments{
\item{x}{An object of class \code{\link{sfnetwork}}.}

\item{y}{An object of class \code{\link{sfnetwork}}, or directly convertible
to it using \code{\link{as_sfnetwork}}.}

\item{...}{Arguments passed on to \code{\link[tidygraph]{graph_join}}.}
}
\value{
An object of class \code{\link{sfnetwork}}.
}
\description{
A spatial network specific join function which makes a spatial full join on
the geometries of the nodes data, based on the \code{st_equals} spatial
predicate. Edge data are combined using a \code{bind_rows} semantic, meaning
that data are matched by column name and values are filled with `NA` if
missing in either of the networks. The \code{from} and \code{to} columns in
the edge data are updated such that they match the new node indices of the
resulting network.
}
\note{
Due to internal rounding of rational numbers, it may occur that the
intersection point between a line and a point is not evaluated as 
actually intersecting that line by the designated algorithm. Instead, the
intersection point lies a tiny-bit away from the edge. Therefore, when any
of \code{blend_nodes} or \code{blend_crossings} is set to \code{TRUE}, a
small tolerance of 1e-5 meters will be used for blending, instead of a 
tolerance of 0.
}
\examples{
library(sf)

node1 = st_point(c(0, 0))
node2 = st_point(c(1, 0))
node3 = st_point(c(1,1))
node4 = st_point(c(0,1))
edge1 = st_sfc(st_linestring(c(node1, node2)))
edge2 = st_sfc(st_linestring(c(node2, node3)))
edge3 = st_sfc(st_linestring(c(node3, node4)))

net = as_sfnetwork(c(edge1, edge2))
other_net = as_sfnetwork(c(edge2, edge3))

joined = st_network_join(net, other_net)
joined

## Plot results.
par(mfrow = c(2,2))
plot(net, pch = 15, cex = 2, lwd = 1.5)
plot(other_net, col = "red", pch = 18, cex = 1.5, lty = 3, add = TRUE)
plot(joined, cex = 1.5)

}
