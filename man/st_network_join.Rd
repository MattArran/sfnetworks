% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join.R
\name{st_network_join}
\alias{st_network_join}
\title{Join two spatial networks based on equality of node geometries}
\usage{
st_network_join(
  x,
  y,
  blend_nodes = FALSE,
  blend_crossings = FALSE,
  sort = TRUE,
  ...
)
}
\arguments{
\item{x}{An object of class \code{\link{sfnetwork}}.}

\item{y}{An object of class \code{\link{sfnetwork}}, or directly convertible 
to it using \code{\link{as_sfnetwork}}.}

\item{blend_nodes}{Should nodes be blended? If \code{TRUE}, edges in x will
be splitted at each location where they intersect a node in y, and edges in
y will be splitted at each location where they intersect a node in x. This
requires edges in both networks to be spatially explicit. Defaults to 
\code{FALSE}.}

\item{blend_crossings}{Should edge crossings be blended? If \code{TRUE},
edges in x will be splitted at each location where they cross an edge in y, 
and edges in y will be splitted at each location where they cross and edge
in x. This requires edges in both networks to be spatially explicit.
Defaults to \code{FALSE}.}

\item{sort}{If any of the blend options was set to \code{TRUE}, should the
nodes in the resulting network be sorted in the same order as those in x, 
followed by the new nodes joined in from y? Defaults to \code{TRUE}. If set 
to \code{FALSE}, node order might be changed. However, sorting
might influence performance.}

\item{...}{Arguments passed on to \code{\link[tidygraph]{graph_join}}.}
}
\value{
An object of class \code{\link{sfnetwork}}.
}
\description{
A spatial network specific join function which makes a spatial full join on 
the geometries of the nodes data, based on the \code{st_equals} spatial 
predicate. Edge data are combined using a \code{bind_rows} semantic, meaning 
that data are matched by column name and values are filled with `NA` if 
missing in either of the networks. The \code{from} and \code{to} columns in 
the edge data are updated such that they match the new node indices of the 
resulting network. If requested, edges can be splitted at locations where 
they either intersect with nodes of the other network, or get crossed by 
edges of the other network.
}
