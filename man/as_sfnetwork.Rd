% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfnetwork.R
\name{as_sfnetwork}
\alias{as_sfnetwork}
\alias{as_sfnetwork.default}
\alias{as_sfnetwork.sf}
\alias{as_sfnetwork.sfNetwork}
\alias{as_sfnetwork.tbl_graph}
\title{Convert a foreign object to an sfnetwork object}
\usage{
as_sfnetwork(x, ...)

\method{as_sfnetwork}{default}(x, directed = TRUE, edges_as_lines = NULL, force = FALSE, ...)

\method{as_sfnetwork}{sf}(x, directed = TRUE, edges_as_lines = TRUE, ...)

\method{as_sfnetwork}{sfNetwork}(x, edges_as_lines = TRUE, ...)

\method{as_sfnetwork}{tbl_graph}(x, edges_as_lines = NULL, force = FALSE, ...)
}
\arguments{
\item{x}{object to be converted into an \code{sfnetwork} object.}

\item{...}{arguments passed on to construction function.}

\item{directed}{Should the constructed network be directed? Defaults to
\code{TRUE}.}

\item{edges_as_lines}{Should the edges be spatially explicit, i.e. have
\code{LINESTRING} geometries stored in a geometry list column? If \code{NULL},
this will be automatically defined by the construction function, see
\code{\link{sfnetwork}}.}

\item{force}{Should network validity checks be skipped? Defaults to
\code{FALSE}, meaning that network validity checks are executed when
constructing the network. These checks guarantee a valid spatial network
structure. For the nodes, this means that they all should have \code{POINT}
geometries. In the case of spatially explicit edges, it is also checked that
all edges have \code{LINESTRING} geometries, nodes and edges have the same 
CRS and boundary points of edges match their corresponding node coordinates.
These checks are important, but also time consuming. If you are already sure
your input data meet the requirements, the checks are unneccesary and can be
turned off to improve speed.}
}
\value{
An object of class \code{sfnetwork}.
}
\description{
\code{sfnetwork} is a tidy data structure for spatial networks. It extends
the graph manipulation functionalities of the
\code{\link[tidygraph]{tidygraph-package}} package into the domain of
geospatial networks, where nodes are embedded in geographical space. It
subclasses \code{\link[tidygraph]{tbl_graph}}, and therefore all of tidygraphs
functions should work as expected, without any conversion. Just as with a
\code{\link[tidygraph]{tbl_graph}}, the nodes are activated by default. The
context can be changed using the \code{\link[tidygraph]{activate}} verb
and affects all subsequent operations. In \code{sfnetworks}, the nodes are
handled as being an \code{\link[sf]{sf}} object with only \code{POINT}
geometries, and can always be extracted with \code{\link[sf]{st_as_sf}} when
activated. The edges can be handled as being an \code{sf} object with only
\code{LINESTRING} geometries, but this is optional. When the edges do not
have an explicit spatial component, they can always be extracted with
\code{\link[tidygraph]{as_tibble}} when activated.
}
\details{
If an object can be read by \code{\link[tidygraph]{as_tbl_graph}} and the
nodes can be read by \code{\link[sf]{st_as_sf}}, it is automatically
supported by sfnetworks.
}
