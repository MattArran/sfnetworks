% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfnetwork.R
\name{as_sfnetwork}
\alias{as_sfnetwork}
\alias{as_sfnetwork.default}
\alias{as_sfnetwork.linnet}
\alias{as_sfnetwork.psp}
\alias{as_sfnetwork.sf}
\alias{as_sfnetwork.sfNetwork}
\alias{as_sfnetwork.sfnetwork}
\alias{as_sfnetwork.tbl_graph}
\title{Convert a foreign object to an sfnetwork object}
\usage{
as_sfnetwork(x, ...)

\method{as_sfnetwork}{default}(x, ...)

\method{as_sfnetwork}{linnet}(x, ...)

\method{as_sfnetwork}{psp}(x, ...)

\method{as_sfnetwork}{sf}(x, ...)

\method{as_sfnetwork}{sfNetwork}(x, ...)

\method{as_sfnetwork}{sfnetwork}(x, ...)

\method{as_sfnetwork}{tbl_graph}(x, ...)
}
\arguments{
\item{x}{Object to be converted into an \code{\link{sfnetwork}} object.}

\item{...}{Arguments passed on to the \code{\link{sfnetwork}} construction
function.}
}
\value{
An object of class \code{\link{sfnetwork}}.
}
\description{
Convert a given object into an object of class \code{\link{sfnetwork}}.
If an object can be read by \code{\link[tidygraph]{as_tbl_graph}} and the
nodes can be read by \code{\link[sf]{st_as_sf}}, it is automatically
supported by sfnetworks.
}
\examples{
# Examples for linnet method
if (require(spatstat)) {
plot(simplenet, main = "spatstat input")
simplenet_as_sfnetwork = as_sfnetwork(simplenet)
plot(simplenet_as_sfnetwork, main = "sfnetworks output")
}
# Examples for psp method
if (require(spatstat)) {
set.seed(42)
test_psp = psp(runif(10), runif(10), runif(10), runif(10), window=owin())
plot(test_psp, main = "spatstat input")
test_psp_as_sfnetwork = as_sfnetwork(test_psp)
plot(test_psp_as_sfnetwork, main = "sfnetworks output")
}
# Examples for sf method
## from POINT geometries
p1 = sf::st_point(c(7, 51))
p2 = sf::st_point(c(7, 52))
p3 = sf::st_point(c(8, 52))
points = sf::st_as_sf(sf::st_sfc(p1, p2, p3, crs = 4326))
as_sfnetwork(points)
## from LINESTRING geometries
e1 = sf::st_cast(sf::st_union(p1,p2), "LINESTRING")
e2 = sf::st_cast(sf::st_union(p1,p3), "LINESTRING")
e3 = sf::st_cast(sf::st_union(p2,p3), "LINESTRING")
lines = sf::st_as_sf(sf::st_sfc(e1, e2, e3, crs = 4326))
as_sfnetwork(lines)
}
